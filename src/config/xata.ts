// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "user",
    columns: [
      { name: "username", type: "string" },
      { name: "emailAddress", type: "email" },
      { name: "password", type: "string" },
      { name: "fullname", type: "string" },
      { name: "createdDate", type: "datetime" },
    ],
  },
  {
    name: "game",
    columns: [
      { name: "name", type: "string" },
      { name: "type", type: "multiple" },
      { name: "gametype", type: "link", link: { table: "gameType" } },
    ],
  },
  { name: "gameType", columns: [{ name: "type", type: "string" }] },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type User = InferredTypes["user"];
export type UserRecord = User & XataRecord;

export type Game = InferredTypes["game"];
export type GameRecord = Game & XataRecord;

export type GameType = InferredTypes["gameType"];
export type GameTypeRecord = GameType & XataRecord;

export type DatabaseSchema = {
  user: UserRecord;
  game: GameRecord;
  gameType: GameTypeRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://victrome-s-workspace-50d9og.eu-west-1.xata.sh/db/victro_db",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
